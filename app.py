import streamlit as st
import requests
import pandas as pd

# --- C·∫§U H√åNH TRANG ---
st.set_page_config(
    page_title="H·ªá th·ªëng G·ª£i √Ω Phim",
    page_icon="üé¨",
    layout="wide"
)

# --- G·ªåI API ---
API_URL = "http://127.0.0.1:8000"


@st.cache_data
def get_movie_list():
    """L·∫•y danh s√°ch phim t·ª´ API ƒë·ªÉ hi·ªÉn th·ªã trong selectbox."""
    try:
        response = requests.get(f"{API_URL}/movies")
        response.raise_for_status()  # N√©m l·ªói n·∫øu request kh√¥ng th√†nh c√¥ng
        data = response.json()
        return data.get("movies", [])
    except requests.exceptions.RequestException as e:
        st.error(f"L·ªói khi k·∫øt n·ªëi t·ªõi API: {e}")
        return []


# --- GIAO DI·ªÜN ---
st.title("üé¨ H·ªá th·ªëng G·ª£i √Ω Phim")

# L·∫•y danh s√°ch phim
movie_list = get_movie_list()

# T·∫°o 2 tab cho 2 ch·ª©c nƒÉng
tab1, tab2 = st.tabs(["**G·ª£i √Ω theo Phim (Content-Based)**", "**G·ª£i √Ω cho Ng∆∞·ªùi d√πng (Collaborative)**"])

# --- Tab 1: Content-Based Filtering ---
with tab1:
    st.header("Ch·ªçn m·ªôt b·ªô phim b·∫°n th√≠ch")

    if movie_list:
        selected_movie = st.selectbox(
            "Nh·∫≠p ho·∫∑c ch·ªçn m·ªôt b·ªô phim:",
            options=movie_list
        )

        if st.button("T√¨m phim t∆∞∆°ng t·ª±", key="content_based"):
            with st.spinner("ƒêang t√¨m ki·∫øm..."):
                try:
                    res = requests.get(f"{API_URL}/recommendations/content-based/{selected_movie}")
                    res.raise_for_status()
                    recommendations = res.json().get("recommendations", [])

                    st.subheader(f"C√°c phim t∆∞∆°ng t·ª± '{selected_movie}':")
                    if recommendations:
                        for movie in recommendations:
                            st.success(movie)
                    else:
                        st.warning("Kh√¥ng t√¨m th·∫•y phim g·ª£i √Ω.")
                except requests.exceptions.RequestException as e:
                    st.error(f"L·ªói API: {e}")
    else:
        st.warning("Kh√¥ng th·ªÉ t·∫£i danh s√°ch phim t·ª´ API. Vui l√≤ng ki·ªÉm tra l·∫°i backend.")

# --- Tab 2: Collaborative Filtering ---
with tab2:
    st.header("Nh·∫≠p ID c·ªßa b·∫°n ƒë·ªÉ nh·∫≠n g·ª£i √Ω")

    user_id = st.number_input("Nh·∫≠p User ID:", min_value=1, step=1)

    if st.button("G·ª£i √Ω phim cho b·∫°n", key="collaborative"):
        with st.spinner("ƒêang x·ª≠ l√Ω..."):
            try:
                res = requests.get(f"{API_URL}/recommendations/collaborative/{user_id}")
                res.raise_for_status()
                recommendations = res.json().get("recommendations", [])

                st.subheader(f"G·ª£i √Ω d√†nh ri√™ng cho User {user_id}:")
                if recommendations:
                    # Hi·ªÉn th·ªã k·∫øt qu·∫£ trong 2 c·ªôt cho ƒë·∫πp m·∫Øt
                    col1, col2 = st.columns(2)
                    for i, movie in enumerate(recommendations):
                        if i < 5:
                            with col1:
                                st.success(movie)
                        else:
                            with col2:
                                st.success(movie)
                else:
                    st.warning("Kh√¥ng t√¨m th·∫•y phim g·ª£i √Ω cho ng∆∞·ªùi d√πng n√†y.")
            except requests.exceptions.RequestException as e:
                st.error(f"L·ªói API: {e}")